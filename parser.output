Terminals unused in grammar

   TOKEN_ERROR
   TOKEN_AUTO
   TOKEN_ELSE
   TOKEN_IF
   TOKEN_STR
   TOKEN_WHILE
   TOKEN_NEGATIVE
   TOKEN_DIVISION
   TOKEN_TYPE_SET
   TOKEN_COMMENT


State 124 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_list TOKEN_EOF
    2        | TOKEN_EOF

    3 type: TOKEN_INT
    4     | TOKEN_FLOAT
    5     | TOKEN_STRING
    6     | TOKEN_BOOLEAN
    7     | TOKEN_CHAR
    8     | TOKEN_ARRAY TOKEN_LEFT_BRACKET TOKEN_INT_LITERAL TOKEN_RIGHT_BRACKET type

    9 decl_list: decl_list decl
   10          | decl

   11 func_decl: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt
   12          | TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

   13 var_decl: TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SEMICOLON
   14         | TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_ASSIGN data_atom TOKEN_SEMICOLON

   15 decl: var_decl
   16     | func_decl

   17 stmt_block: TOKEN_LEFT_BRACE stmt_list TOKEN_RIGHT_BRACE
   18           | TOKEN_LEFT_BRACE TOKEN_RIGHT_BRACE

   19 function_type: type
   20              | TOKEN_VOID

   21 param_recursive: TOKEN_COMMA type param_recursive
   22                | %empty

   23 param_list: TOKEN_IDENTIFIER TOKEN_COLON type param_recursive
   24           | %empty

   25 stmt_list: stmt_list stmt
   26          | stmt

   27 stmt: for_loop
   28     | var_decl
   29     | expr_assign
   30     | return_stmt
   31     | print_stmt
   32     | inc_or_dec
   33     | stmt_block

   34 return_stmt: TOKEN_RETURN expr_val

   35 expr_assign: TOKEN_IDENTIFIER TOKEN_ASSIGN expr_val TOKEN_SEMICOLON

   36 inc_or_dec: TOKEN_IDENTIFIER TOKEN_PLUS_PLUS TOKEN_SEMICOLON
   37           | TOKEN_IDENTIFIER TOKEN_MINUS_MINUS TOKEN_SEMICOLON

   38 expr_val: expr_val operator data_atom
   39         | data_atom

   40 expr: expr_assign
   41     | expr_val

   42 for_loop: TOKEN_FOR TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS if_for_block

   43 for_expr: expr
   44         | %empty

   45 expr_val_list: expr_val expr_val_list_recursive
   46              | %empty

   47 expr_val_list_recursive: TOKEN_COMMA expr_val
   48                        | %empty

   49 if_for_block: stmt
   50             | %empty

   51 operator: TOKEN_GREATER_THAN_OR_EQUAL
   52         | TOKEN_GREATER_THAN
   53         | TOKEN_LESS_THAN
   54         | TOKEN_LESS_THAN_OR_EQUAL
   55         | TOKEN_NOT_EQUAL
   56         | TOKEN_EQUAL
   57         | TOKEN_ADD
   58         | TOKEN_AND
   59         | TOKEN_OR
   60         | TOKEN_SUBTRACT
   61         | TOKEN_MULTIPLY
   62         | TOKEN_MODULO
   63         | TOKEN_EXPONENT

   64 boolean_literal: TOKEN_TRUE
   65                | TOKEN_FALSE

   66 func_call: TOKEN_IDENTIFIER TOKEN_LEFT_PARENTHESIS expr_val_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

   67 data_atom: TOKEN_STRING_LITERAL
   68          | TOKEN_INT_LITERAL
   69          | TOKEN_CHAR_LITERAL
   70          | TOKEN_IDENTIFIER
   71          | boolean_literal
   72          | func_call
   73          | TOKEN_NOT data_atom
   74          | TOKEN_FLOAT_LITERAL
   75          | TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET expr_val TOKEN_RIGHT_BRACKET
   76          | TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS
   77          | inc_or_dec

   78 print_stmt: TOKEN_PRINT expr_val_list TOKEN_SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ERROR (258)
TOKEN_EOF (259) 1 2
TOKEN_ARRAY (260) 8
TOKEN_SUBTRACT (261) 60
TOKEN_AUTO (262)
TOKEN_BOOLEAN (263) 6
TOKEN_CHAR (264) 7
TOKEN_ELSE (265)
TOKEN_FALSE (266) 65
TOKEN_FLOAT (267) 4
TOKEN_FOR (268) 42
TOKEN_FUNCTION (269) 11 12
TOKEN_COLON (270) 11 12 13 14 23
TOKEN_IF (271)
TOKEN_INT (272) 3
TOKEN_PRINT (273) 78
TOKEN_RETURN (274) 34
TOKEN_STR (275)
TOKEN_TRUE (276) 64
TOKEN_VOID (277) 20
TOKEN_WHILE (278)
TOKEN_ADD (279) 57
TOKEN_NEGATIVE (280)
TOKEN_MULTIPLY (281) 61
TOKEN_DIVISION (282)
TOKEN_MODULO (283) 62
TOKEN_EXPONENT (284) 63
TOKEN_LEFT_PARENTHESIS (285) 11 12 42 66 76
TOKEN_RIGHT_PARENTHESIS (286) 11 12 42 66 76
TOKEN_ASSIGN (287) 11 14 35
TOKEN_LEFT_BRACE (288) 17 18
TOKEN_RIGHT_BRACE (289) 17 18
TOKEN_LEFT_BRACKET (290) 8 75
TOKEN_RIGHT_BRACKET (291) 8 75
TOKEN_NOT_EQUAL (292) 55
TOKEN_EQUAL (293) 56
TOKEN_NOT (294) 73
TOKEN_LESS_THAN (295) 53
TOKEN_GREATER_THAN (296) 52
TOKEN_AND (297) 58
TOKEN_OR (298) 59
TOKEN_TYPE_SET (299)
TOKEN_SEMICOLON (300) 12 13 14 35 36 37 42 66 78
TOKEN_COMMA (301) 21 47
TOKEN_PLUS_PLUS (302) 36
TOKEN_MINUS_MINUS (303) 37
TOKEN_COMMENT (304)
TOKEN_LESS_THAN_OR_EQUAL (305) 54
TOKEN_GREATER_THAN_OR_EQUAL (306) 51
TOKEN_IDENTIFIER (307) 11 12 13 14 23 35 36 37 66 70 75
TOKEN_INT_LITERAL (308) 8 68
TOKEN_FLOAT_LITERAL (309) 74
TOKEN_STRING_LITERAL (310) 67
TOKEN_STRING (311) 5
TOKEN_CHAR_LITERAL (312) 69


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1 2, on right: 0
type (60)
    on left: 3 4 5 6 7 8, on right: 8 13 14 19 21 23
decl_list (61)
    on left: 9 10, on right: 1 9
func_decl (62)
    on left: 11 12, on right: 16
var_decl (63)
    on left: 13 14, on right: 15 28
decl (64)
    on left: 15 16, on right: 9 10
stmt_block (65)
    on left: 17 18, on right: 33
function_type (66)
    on left: 19 20, on right: 11 12
param_recursive (67)
    on left: 21 22, on right: 21 23
param_list (68)
    on left: 23 24, on right: 11 12
stmt_list (69)
    on left: 25 26, on right: 17 25
stmt (70)
    on left: 27 28 29 30 31 32 33, on right: 11 25 26 49
return_stmt (71)
    on left: 34, on right: 30
expr_assign (72)
    on left: 35, on right: 29 40
inc_or_dec (73)
    on left: 36 37, on right: 32 77
expr_val (74)
    on left: 38 39, on right: 34 35 38 41 45 47 75
expr (75)
    on left: 40 41, on right: 43 76
for_loop (76)
    on left: 42, on right: 27
for_expr (77)
    on left: 43 44, on right: 42
expr_val_list (78)
    on left: 45 46, on right: 66 78
expr_val_list_recursive (79)
    on left: 47 48, on right: 45
if_for_block (80)
    on left: 49 50, on right: 42
operator (81)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63, on right: 38
boolean_literal (82)
    on left: 64 65, on right: 71
func_call (83)
    on left: 66, on right: 72
data_atom (84)
    on left: 67 68 69 70 71 72 73 74 75 76 77, on right: 14 38 39 73
print_stmt (85)
    on left: 78, on right: 31


State 0

    0 $accept: . program $end

    TOKEN_EOF         shift, and go to state 1
    TOKEN_IDENTIFIER  shift, and go to state 2

    program    go to state 3
    decl_list  go to state 4
    func_decl  go to state 5
    var_decl   go to state 6
    decl       go to state 7


State 1

    2 program: TOKEN_EOF .

    $default  reduce using rule 2 (program)


State 2

   11 func_decl: TOKEN_IDENTIFIER . TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt
   12          | TOKEN_IDENTIFIER . TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON
   13 var_decl: TOKEN_IDENTIFIER . TOKEN_COLON type TOKEN_SEMICOLON
   14         | TOKEN_IDENTIFIER . TOKEN_COLON type TOKEN_ASSIGN data_atom TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 8


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: decl_list . TOKEN_EOF
    9 decl_list: decl_list . decl

    TOKEN_EOF         shift, and go to state 10
    TOKEN_IDENTIFIER  shift, and go to state 2

    func_decl  go to state 5
    var_decl   go to state 6
    decl       go to state 11


State 5

   16 decl: func_decl .

    $default  reduce using rule 16 (decl)


State 6

   15 decl: var_decl .

    $default  reduce using rule 15 (decl)


State 7

   10 decl_list: decl .

    $default  reduce using rule 10 (decl_list)


State 8

   11 func_decl: TOKEN_IDENTIFIER TOKEN_COLON . TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt
   12          | TOKEN_IDENTIFIER TOKEN_COLON . TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON
   13 var_decl: TOKEN_IDENTIFIER TOKEN_COLON . type TOKEN_SEMICOLON
   14         | TOKEN_IDENTIFIER TOKEN_COLON . type TOKEN_ASSIGN data_atom TOKEN_SEMICOLON

    TOKEN_ARRAY     shift, and go to state 12
    TOKEN_BOOLEAN   shift, and go to state 13
    TOKEN_CHAR      shift, and go to state 14
    TOKEN_FLOAT     shift, and go to state 15
    TOKEN_FUNCTION  shift, and go to state 16
    TOKEN_INT       shift, and go to state 17
    TOKEN_STRING    shift, and go to state 18

    type  go to state 19


State 9

    0 $accept: program $end .

    $default  accept


State 10

    1 program: decl_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 11

    9 decl_list: decl_list decl .

    $default  reduce using rule 9 (decl_list)


State 12

    8 type: TOKEN_ARRAY . TOKEN_LEFT_BRACKET TOKEN_INT_LITERAL TOKEN_RIGHT_BRACKET type

    TOKEN_LEFT_BRACKET  shift, and go to state 20


State 13

    6 type: TOKEN_BOOLEAN .

    $default  reduce using rule 6 (type)


State 14

    7 type: TOKEN_CHAR .

    $default  reduce using rule 7 (type)


State 15

    4 type: TOKEN_FLOAT .

    $default  reduce using rule 4 (type)


State 16

   11 func_decl: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION . function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt
   12          | TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION . function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_ARRAY    shift, and go to state 12
    TOKEN_BOOLEAN  shift, and go to state 13
    TOKEN_CHAR     shift, and go to state 14
    TOKEN_FLOAT    shift, and go to state 15
    TOKEN_INT      shift, and go to state 17
    TOKEN_VOID     shift, and go to state 21
    TOKEN_STRING   shift, and go to state 18

    type           go to state 22
    function_type  go to state 23


State 17

    3 type: TOKEN_INT .

    $default  reduce using rule 3 (type)


State 18

    5 type: TOKEN_STRING .

    $default  reduce using rule 5 (type)


State 19

   13 var_decl: TOKEN_IDENTIFIER TOKEN_COLON type . TOKEN_SEMICOLON
   14         | TOKEN_IDENTIFIER TOKEN_COLON type . TOKEN_ASSIGN data_atom TOKEN_SEMICOLON

    TOKEN_ASSIGN     shift, and go to state 24
    TOKEN_SEMICOLON  shift, and go to state 25


State 20

    8 type: TOKEN_ARRAY TOKEN_LEFT_BRACKET . TOKEN_INT_LITERAL TOKEN_RIGHT_BRACKET type

    TOKEN_INT_LITERAL  shift, and go to state 26


State 21

   20 function_type: TOKEN_VOID .

    $default  reduce using rule 20 (function_type)


State 22

   19 function_type: type .

    $default  reduce using rule 19 (function_type)


State 23

   11 func_decl: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type . TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt
   12          | TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type . TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_LEFT_PARENTHESIS  shift, and go to state 27


State 24

   14 var_decl: TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_ASSIGN . data_atom TOKEN_SEMICOLON

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 32
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    inc_or_dec       go to state 37
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 40


State 25

   13 var_decl: TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 13 (var_decl)


State 26

    8 type: TOKEN_ARRAY TOKEN_LEFT_BRACKET TOKEN_INT_LITERAL . TOKEN_RIGHT_BRACKET type

    TOKEN_RIGHT_BRACKET  shift, and go to state 41


State 27

   11 func_decl: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS . param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt
   12          | TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS . param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 24 (param_list)

    param_list  go to state 43


State 28

   65 boolean_literal: TOKEN_FALSE .

    $default  reduce using rule 65 (boolean_literal)


State 29

   64 boolean_literal: TOKEN_TRUE .

    $default  reduce using rule 64 (boolean_literal)


State 30

   76 data_atom: TOKEN_LEFT_PARENTHESIS . expr TOKEN_RIGHT_PARENTHESIS

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 44
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    expr_assign      go to state 45
    inc_or_dec       go to state 37
    expr_val         go to state 46
    expr             go to state 47
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 48


State 31

   73 data_atom: TOKEN_NOT . data_atom

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 32
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    inc_or_dec       go to state 37
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 49


State 32

   36 inc_or_dec: TOKEN_IDENTIFIER . TOKEN_PLUS_PLUS TOKEN_SEMICOLON
   37           | TOKEN_IDENTIFIER . TOKEN_MINUS_MINUS TOKEN_SEMICOLON
   66 func_call: TOKEN_IDENTIFIER . TOKEN_LEFT_PARENTHESIS expr_val_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON
   70 data_atom: TOKEN_IDENTIFIER .
   75          | TOKEN_IDENTIFIER . TOKEN_LEFT_BRACKET expr_val TOKEN_RIGHT_BRACKET

    TOKEN_LEFT_PARENTHESIS  shift, and go to state 50
    TOKEN_LEFT_BRACKET      shift, and go to state 51
    TOKEN_PLUS_PLUS         shift, and go to state 52
    TOKEN_MINUS_MINUS       shift, and go to state 53

    $default  reduce using rule 70 (data_atom)


State 33

   68 data_atom: TOKEN_INT_LITERAL .

    $default  reduce using rule 68 (data_atom)


State 34

   74 data_atom: TOKEN_FLOAT_LITERAL .

    $default  reduce using rule 74 (data_atom)


State 35

   67 data_atom: TOKEN_STRING_LITERAL .

    $default  reduce using rule 67 (data_atom)


State 36

   69 data_atom: TOKEN_CHAR_LITERAL .

    $default  reduce using rule 69 (data_atom)


State 37

   77 data_atom: inc_or_dec .

    $default  reduce using rule 77 (data_atom)


State 38

   71 data_atom: boolean_literal .

    $default  reduce using rule 71 (data_atom)


State 39

   72 data_atom: func_call .

    $default  reduce using rule 72 (data_atom)


State 40

   14 var_decl: TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_ASSIGN data_atom . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 54


State 41

    8 type: TOKEN_ARRAY TOKEN_LEFT_BRACKET TOKEN_INT_LITERAL TOKEN_RIGHT_BRACKET . type

    TOKEN_ARRAY    shift, and go to state 12
    TOKEN_BOOLEAN  shift, and go to state 13
    TOKEN_CHAR     shift, and go to state 14
    TOKEN_FLOAT    shift, and go to state 15
    TOKEN_INT      shift, and go to state 17
    TOKEN_STRING   shift, and go to state 18

    type  go to state 55


State 42

   23 param_list: TOKEN_IDENTIFIER . TOKEN_COLON type param_recursive

    TOKEN_COLON  shift, and go to state 56


State 43

   11 func_decl: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list . TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt
   12          | TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list . TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 57


State 44

   35 expr_assign: TOKEN_IDENTIFIER . TOKEN_ASSIGN expr_val TOKEN_SEMICOLON
   36 inc_or_dec: TOKEN_IDENTIFIER . TOKEN_PLUS_PLUS TOKEN_SEMICOLON
   37           | TOKEN_IDENTIFIER . TOKEN_MINUS_MINUS TOKEN_SEMICOLON
   66 func_call: TOKEN_IDENTIFIER . TOKEN_LEFT_PARENTHESIS expr_val_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON
   70 data_atom: TOKEN_IDENTIFIER .
   75          | TOKEN_IDENTIFIER . TOKEN_LEFT_BRACKET expr_val TOKEN_RIGHT_BRACKET

    TOKEN_LEFT_PARENTHESIS  shift, and go to state 50
    TOKEN_ASSIGN            shift, and go to state 58
    TOKEN_LEFT_BRACKET      shift, and go to state 51
    TOKEN_PLUS_PLUS         shift, and go to state 52
    TOKEN_MINUS_MINUS       shift, and go to state 53

    $default  reduce using rule 70 (data_atom)


State 45

   40 expr: expr_assign .

    $default  reduce using rule 40 (expr)


State 46

   38 expr_val: expr_val . operator data_atom
   41 expr: expr_val .

    TOKEN_SUBTRACT               shift, and go to state 59
    TOKEN_ADD                    shift, and go to state 60
    TOKEN_MULTIPLY               shift, and go to state 61
    TOKEN_MODULO                 shift, and go to state 62
    TOKEN_EXPONENT               shift, and go to state 63
    TOKEN_NOT_EQUAL              shift, and go to state 64
    TOKEN_EQUAL                  shift, and go to state 65
    TOKEN_LESS_THAN              shift, and go to state 66
    TOKEN_GREATER_THAN           shift, and go to state 67
    TOKEN_AND                    shift, and go to state 68
    TOKEN_OR                     shift, and go to state 69
    TOKEN_LESS_THAN_OR_EQUAL     shift, and go to state 70
    TOKEN_GREATER_THAN_OR_EQUAL  shift, and go to state 71

    $default  reduce using rule 41 (expr)

    operator  go to state 72


State 47

   76 data_atom: TOKEN_LEFT_PARENTHESIS expr . TOKEN_RIGHT_PARENTHESIS

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 73


State 48

   39 expr_val: data_atom .

    $default  reduce using rule 39 (expr_val)


State 49

   73 data_atom: TOKEN_NOT data_atom .

    $default  reduce using rule 73 (data_atom)


State 50

   66 func_call: TOKEN_IDENTIFIER TOKEN_LEFT_PARENTHESIS . expr_val_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 32
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    $default  reduce using rule 46 (expr_val_list)

    inc_or_dec       go to state 37
    expr_val         go to state 74
    expr_val_list    go to state 75
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 48


State 51

   75 data_atom: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET . expr_val TOKEN_RIGHT_BRACKET

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 32
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    inc_or_dec       go to state 37
    expr_val         go to state 76
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 48


State 52

   36 inc_or_dec: TOKEN_IDENTIFIER TOKEN_PLUS_PLUS . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 77


State 53

   37 inc_or_dec: TOKEN_IDENTIFIER TOKEN_MINUS_MINUS . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 78


State 54

   14 var_decl: TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_ASSIGN data_atom TOKEN_SEMICOLON .

    $default  reduce using rule 14 (var_decl)


State 55

    8 type: TOKEN_ARRAY TOKEN_LEFT_BRACKET TOKEN_INT_LITERAL TOKEN_RIGHT_BRACKET type .

    $default  reduce using rule 8 (type)


State 56

   23 param_list: TOKEN_IDENTIFIER TOKEN_COLON . type param_recursive

    TOKEN_ARRAY    shift, and go to state 12
    TOKEN_BOOLEAN  shift, and go to state 13
    TOKEN_CHAR     shift, and go to state 14
    TOKEN_FLOAT    shift, and go to state 15
    TOKEN_INT      shift, and go to state 17
    TOKEN_STRING   shift, and go to state 18

    type  go to state 79


State 57

   11 func_decl: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS . TOKEN_ASSIGN stmt
   12          | TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS . TOKEN_SEMICOLON

    TOKEN_ASSIGN     shift, and go to state 80
    TOKEN_SEMICOLON  shift, and go to state 81


State 58

   35 expr_assign: TOKEN_IDENTIFIER TOKEN_ASSIGN . expr_val TOKEN_SEMICOLON

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 32
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    inc_or_dec       go to state 37
    expr_val         go to state 82
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 48


State 59

   60 operator: TOKEN_SUBTRACT .

    $default  reduce using rule 60 (operator)


State 60

   57 operator: TOKEN_ADD .

    $default  reduce using rule 57 (operator)


State 61

   61 operator: TOKEN_MULTIPLY .

    $default  reduce using rule 61 (operator)


State 62

   62 operator: TOKEN_MODULO .

    $default  reduce using rule 62 (operator)


State 63

   63 operator: TOKEN_EXPONENT .

    $default  reduce using rule 63 (operator)


State 64

   55 operator: TOKEN_NOT_EQUAL .

    $default  reduce using rule 55 (operator)


State 65

   56 operator: TOKEN_EQUAL .

    $default  reduce using rule 56 (operator)


State 66

   53 operator: TOKEN_LESS_THAN .

    $default  reduce using rule 53 (operator)


State 67

   52 operator: TOKEN_GREATER_THAN .

    $default  reduce using rule 52 (operator)


State 68

   58 operator: TOKEN_AND .

    $default  reduce using rule 58 (operator)


State 69

   59 operator: TOKEN_OR .

    $default  reduce using rule 59 (operator)


State 70

   54 operator: TOKEN_LESS_THAN_OR_EQUAL .

    $default  reduce using rule 54 (operator)


State 71

   51 operator: TOKEN_GREATER_THAN_OR_EQUAL .

    $default  reduce using rule 51 (operator)


State 72

   38 expr_val: expr_val operator . data_atom

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 32
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    inc_or_dec       go to state 37
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 83


State 73

   76 data_atom: TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS .

    $default  reduce using rule 76 (data_atom)


State 74

   38 expr_val: expr_val . operator data_atom
   45 expr_val_list: expr_val . expr_val_list_recursive

    TOKEN_SUBTRACT               shift, and go to state 59
    TOKEN_ADD                    shift, and go to state 60
    TOKEN_MULTIPLY               shift, and go to state 61
    TOKEN_MODULO                 shift, and go to state 62
    TOKEN_EXPONENT               shift, and go to state 63
    TOKEN_NOT_EQUAL              shift, and go to state 64
    TOKEN_EQUAL                  shift, and go to state 65
    TOKEN_LESS_THAN              shift, and go to state 66
    TOKEN_GREATER_THAN           shift, and go to state 67
    TOKEN_AND                    shift, and go to state 68
    TOKEN_OR                     shift, and go to state 69
    TOKEN_COMMA                  shift, and go to state 84
    TOKEN_LESS_THAN_OR_EQUAL     shift, and go to state 70
    TOKEN_GREATER_THAN_OR_EQUAL  shift, and go to state 71

    $default  reduce using rule 48 (expr_val_list_recursive)

    expr_val_list_recursive  go to state 85
    operator                 go to state 72


State 75

   66 func_call: TOKEN_IDENTIFIER TOKEN_LEFT_PARENTHESIS expr_val_list . TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 86


State 76

   38 expr_val: expr_val . operator data_atom
   75 data_atom: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET expr_val . TOKEN_RIGHT_BRACKET

    TOKEN_SUBTRACT               shift, and go to state 59
    TOKEN_ADD                    shift, and go to state 60
    TOKEN_MULTIPLY               shift, and go to state 61
    TOKEN_MODULO                 shift, and go to state 62
    TOKEN_EXPONENT               shift, and go to state 63
    TOKEN_RIGHT_BRACKET          shift, and go to state 87
    TOKEN_NOT_EQUAL              shift, and go to state 64
    TOKEN_EQUAL                  shift, and go to state 65
    TOKEN_LESS_THAN              shift, and go to state 66
    TOKEN_GREATER_THAN           shift, and go to state 67
    TOKEN_AND                    shift, and go to state 68
    TOKEN_OR                     shift, and go to state 69
    TOKEN_LESS_THAN_OR_EQUAL     shift, and go to state 70
    TOKEN_GREATER_THAN_OR_EQUAL  shift, and go to state 71

    operator  go to state 72


State 77

   36 inc_or_dec: TOKEN_IDENTIFIER TOKEN_PLUS_PLUS TOKEN_SEMICOLON .

    $default  reduce using rule 36 (inc_or_dec)


State 78

   37 inc_or_dec: TOKEN_IDENTIFIER TOKEN_MINUS_MINUS TOKEN_SEMICOLON .

    $default  reduce using rule 37 (inc_or_dec)


State 79

   23 param_list: TOKEN_IDENTIFIER TOKEN_COLON type . param_recursive

    TOKEN_COMMA  shift, and go to state 88

    $default  reduce using rule 22 (param_recursive)

    param_recursive  go to state 89


State 80

   11 func_decl: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN . stmt

    TOKEN_FOR         shift, and go to state 90
    TOKEN_PRINT       shift, and go to state 91
    TOKEN_RETURN      shift, and go to state 92
    TOKEN_LEFT_BRACE  shift, and go to state 93
    TOKEN_IDENTIFIER  shift, and go to state 94

    var_decl     go to state 95
    stmt_block   go to state 96
    stmt         go to state 97
    return_stmt  go to state 98
    expr_assign  go to state 99
    inc_or_dec   go to state 100
    for_loop     go to state 101
    print_stmt   go to state 102


State 81

   12 func_decl: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON .

    $default  reduce using rule 12 (func_decl)


State 82

   35 expr_assign: TOKEN_IDENTIFIER TOKEN_ASSIGN expr_val . TOKEN_SEMICOLON
   38 expr_val: expr_val . operator data_atom

    TOKEN_SUBTRACT               shift, and go to state 59
    TOKEN_ADD                    shift, and go to state 60
    TOKEN_MULTIPLY               shift, and go to state 61
    TOKEN_MODULO                 shift, and go to state 62
    TOKEN_EXPONENT               shift, and go to state 63
    TOKEN_NOT_EQUAL              shift, and go to state 64
    TOKEN_EQUAL                  shift, and go to state 65
    TOKEN_LESS_THAN              shift, and go to state 66
    TOKEN_GREATER_THAN           shift, and go to state 67
    TOKEN_AND                    shift, and go to state 68
    TOKEN_OR                     shift, and go to state 69
    TOKEN_SEMICOLON              shift, and go to state 103
    TOKEN_LESS_THAN_OR_EQUAL     shift, and go to state 70
    TOKEN_GREATER_THAN_OR_EQUAL  shift, and go to state 71

    operator  go to state 72


State 83

   38 expr_val: expr_val operator data_atom .

    $default  reduce using rule 38 (expr_val)


State 84

   47 expr_val_list_recursive: TOKEN_COMMA . expr_val

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 32
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    inc_or_dec       go to state 37
    expr_val         go to state 104
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 48


State 85

   45 expr_val_list: expr_val expr_val_list_recursive .

    $default  reduce using rule 45 (expr_val_list)


State 86

   66 func_call: TOKEN_IDENTIFIER TOKEN_LEFT_PARENTHESIS expr_val_list TOKEN_RIGHT_PARENTHESIS . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 105


State 87

   75 data_atom: TOKEN_IDENTIFIER TOKEN_LEFT_BRACKET expr_val TOKEN_RIGHT_BRACKET .

    $default  reduce using rule 75 (data_atom)


State 88

   21 param_recursive: TOKEN_COMMA . type param_recursive

    TOKEN_ARRAY    shift, and go to state 12
    TOKEN_BOOLEAN  shift, and go to state 13
    TOKEN_CHAR     shift, and go to state 14
    TOKEN_FLOAT    shift, and go to state 15
    TOKEN_INT      shift, and go to state 17
    TOKEN_STRING   shift, and go to state 18

    type  go to state 106


State 89

   23 param_list: TOKEN_IDENTIFIER TOKEN_COLON type param_recursive .

    $default  reduce using rule 23 (param_list)


State 90

   42 for_loop: TOKEN_FOR . TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS if_for_block

    TOKEN_LEFT_PARENTHESIS  shift, and go to state 107


State 91

   78 print_stmt: TOKEN_PRINT . expr_val_list TOKEN_SEMICOLON

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 32
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    $default  reduce using rule 46 (expr_val_list)

    inc_or_dec       go to state 37
    expr_val         go to state 74
    expr_val_list    go to state 108
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 48


State 92

   34 return_stmt: TOKEN_RETURN . expr_val

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 32
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    inc_or_dec       go to state 37
    expr_val         go to state 109
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 48


State 93

   17 stmt_block: TOKEN_LEFT_BRACE . stmt_list TOKEN_RIGHT_BRACE
   18           | TOKEN_LEFT_BRACE . TOKEN_RIGHT_BRACE

    TOKEN_FOR          shift, and go to state 90
    TOKEN_PRINT        shift, and go to state 91
    TOKEN_RETURN       shift, and go to state 92
    TOKEN_LEFT_BRACE   shift, and go to state 93
    TOKEN_RIGHT_BRACE  shift, and go to state 110
    TOKEN_IDENTIFIER   shift, and go to state 94

    var_decl     go to state 95
    stmt_block   go to state 96
    stmt_list    go to state 111
    stmt         go to state 112
    return_stmt  go to state 98
    expr_assign  go to state 99
    inc_or_dec   go to state 100
    for_loop     go to state 101
    print_stmt   go to state 102


State 94

   13 var_decl: TOKEN_IDENTIFIER . TOKEN_COLON type TOKEN_SEMICOLON
   14         | TOKEN_IDENTIFIER . TOKEN_COLON type TOKEN_ASSIGN data_atom TOKEN_SEMICOLON
   35 expr_assign: TOKEN_IDENTIFIER . TOKEN_ASSIGN expr_val TOKEN_SEMICOLON
   36 inc_or_dec: TOKEN_IDENTIFIER . TOKEN_PLUS_PLUS TOKEN_SEMICOLON
   37           | TOKEN_IDENTIFIER . TOKEN_MINUS_MINUS TOKEN_SEMICOLON

    TOKEN_COLON        shift, and go to state 113
    TOKEN_ASSIGN       shift, and go to state 58
    TOKEN_PLUS_PLUS    shift, and go to state 52
    TOKEN_MINUS_MINUS  shift, and go to state 53


State 95

   28 stmt: var_decl .

    $default  reduce using rule 28 (stmt)


State 96

   33 stmt: stmt_block .

    $default  reduce using rule 33 (stmt)


State 97

   11 func_decl: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_FUNCTION function_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt .

    $default  reduce using rule 11 (func_decl)


State 98

   30 stmt: return_stmt .

    $default  reduce using rule 30 (stmt)


State 99

   29 stmt: expr_assign .

    $default  reduce using rule 29 (stmt)


State 100

   32 stmt: inc_or_dec .

    $default  reduce using rule 32 (stmt)


State 101

   27 stmt: for_loop .

    $default  reduce using rule 27 (stmt)


State 102

   31 stmt: print_stmt .

    $default  reduce using rule 31 (stmt)


State 103

   35 expr_assign: TOKEN_IDENTIFIER TOKEN_ASSIGN expr_val TOKEN_SEMICOLON .

    $default  reduce using rule 35 (expr_assign)


State 104

   38 expr_val: expr_val . operator data_atom
   47 expr_val_list_recursive: TOKEN_COMMA expr_val .

    TOKEN_SUBTRACT               shift, and go to state 59
    TOKEN_ADD                    shift, and go to state 60
    TOKEN_MULTIPLY               shift, and go to state 61
    TOKEN_MODULO                 shift, and go to state 62
    TOKEN_EXPONENT               shift, and go to state 63
    TOKEN_NOT_EQUAL              shift, and go to state 64
    TOKEN_EQUAL                  shift, and go to state 65
    TOKEN_LESS_THAN              shift, and go to state 66
    TOKEN_GREATER_THAN           shift, and go to state 67
    TOKEN_AND                    shift, and go to state 68
    TOKEN_OR                     shift, and go to state 69
    TOKEN_LESS_THAN_OR_EQUAL     shift, and go to state 70
    TOKEN_GREATER_THAN_OR_EQUAL  shift, and go to state 71

    $default  reduce using rule 47 (expr_val_list_recursive)

    operator  go to state 72


State 105

   66 func_call: TOKEN_IDENTIFIER TOKEN_LEFT_PARENTHESIS expr_val_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON .

    $default  reduce using rule 66 (func_call)


State 106

   21 param_recursive: TOKEN_COMMA type . param_recursive

    TOKEN_COMMA  shift, and go to state 88

    $default  reduce using rule 22 (param_recursive)

    param_recursive  go to state 114


State 107

   42 for_loop: TOKEN_FOR TOKEN_LEFT_PARENTHESIS . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS if_for_block

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 44
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    $default  reduce using rule 44 (for_expr)

    expr_assign      go to state 45
    inc_or_dec       go to state 37
    expr_val         go to state 46
    expr             go to state 115
    for_expr         go to state 116
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 48


State 108

   78 print_stmt: TOKEN_PRINT expr_val_list . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 117


State 109

   34 return_stmt: TOKEN_RETURN expr_val .
   38 expr_val: expr_val . operator data_atom

    TOKEN_SUBTRACT               shift, and go to state 59
    TOKEN_ADD                    shift, and go to state 60
    TOKEN_MULTIPLY               shift, and go to state 61
    TOKEN_MODULO                 shift, and go to state 62
    TOKEN_EXPONENT               shift, and go to state 63
    TOKEN_NOT_EQUAL              shift, and go to state 64
    TOKEN_EQUAL                  shift, and go to state 65
    TOKEN_LESS_THAN              shift, and go to state 66
    TOKEN_GREATER_THAN           shift, and go to state 67
    TOKEN_AND                    shift, and go to state 68
    TOKEN_OR                     shift, and go to state 69
    TOKEN_LESS_THAN_OR_EQUAL     shift, and go to state 70
    TOKEN_GREATER_THAN_OR_EQUAL  shift, and go to state 71

    $default  reduce using rule 34 (return_stmt)

    operator  go to state 72


State 110

   18 stmt_block: TOKEN_LEFT_BRACE TOKEN_RIGHT_BRACE .

    $default  reduce using rule 18 (stmt_block)


State 111

   17 stmt_block: TOKEN_LEFT_BRACE stmt_list . TOKEN_RIGHT_BRACE
   25 stmt_list: stmt_list . stmt

    TOKEN_FOR          shift, and go to state 90
    TOKEN_PRINT        shift, and go to state 91
    TOKEN_RETURN       shift, and go to state 92
    TOKEN_LEFT_BRACE   shift, and go to state 93
    TOKEN_RIGHT_BRACE  shift, and go to state 118
    TOKEN_IDENTIFIER   shift, and go to state 94

    var_decl     go to state 95
    stmt_block   go to state 96
    stmt         go to state 119
    return_stmt  go to state 98
    expr_assign  go to state 99
    inc_or_dec   go to state 100
    for_loop     go to state 101
    print_stmt   go to state 102


State 112

   26 stmt_list: stmt .

    $default  reduce using rule 26 (stmt_list)


State 113

   13 var_decl: TOKEN_IDENTIFIER TOKEN_COLON . type TOKEN_SEMICOLON
   14         | TOKEN_IDENTIFIER TOKEN_COLON . type TOKEN_ASSIGN data_atom TOKEN_SEMICOLON

    TOKEN_ARRAY    shift, and go to state 12
    TOKEN_BOOLEAN  shift, and go to state 13
    TOKEN_CHAR     shift, and go to state 14
    TOKEN_FLOAT    shift, and go to state 15
    TOKEN_INT      shift, and go to state 17
    TOKEN_STRING   shift, and go to state 18

    type  go to state 19


State 114

   21 param_recursive: TOKEN_COMMA type param_recursive .

    $default  reduce using rule 21 (param_recursive)


State 115

   43 for_expr: expr .

    $default  reduce using rule 43 (for_expr)


State 116

   42 for_loop: TOKEN_FOR TOKEN_LEFT_PARENTHESIS for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS if_for_block

    TOKEN_SEMICOLON  shift, and go to state 120


State 117

   78 print_stmt: TOKEN_PRINT expr_val_list TOKEN_SEMICOLON .

    $default  reduce using rule 78 (print_stmt)


State 118

   17 stmt_block: TOKEN_LEFT_BRACE stmt_list TOKEN_RIGHT_BRACE .

    $default  reduce using rule 17 (stmt_block)


State 119

   25 stmt_list: stmt_list stmt .

    $default  reduce using rule 25 (stmt_list)


State 120

   42 for_loop: TOKEN_FOR TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS if_for_block

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 44
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    $default  reduce using rule 44 (for_expr)

    expr_assign      go to state 45
    inc_or_dec       go to state 37
    expr_val         go to state 46
    expr             go to state 115
    for_expr         go to state 121
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 48


State 121

   42 for_loop: TOKEN_FOR TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS if_for_block

    TOKEN_SEMICOLON  shift, and go to state 122


State 122

   42 for_loop: TOKEN_FOR TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_RIGHT_PARENTHESIS if_for_block

    TOKEN_FALSE             shift, and go to state 28
    TOKEN_TRUE              shift, and go to state 29
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 30
    TOKEN_NOT               shift, and go to state 31
    TOKEN_IDENTIFIER        shift, and go to state 44
    TOKEN_INT_LITERAL       shift, and go to state 33
    TOKEN_FLOAT_LITERAL     shift, and go to state 34
    TOKEN_STRING_LITERAL    shift, and go to state 35
    TOKEN_CHAR_LITERAL      shift, and go to state 36

    $default  reduce using rule 44 (for_expr)

    expr_assign      go to state 45
    inc_or_dec       go to state 37
    expr_val         go to state 46
    expr             go to state 115
    for_expr         go to state 123
    boolean_literal  go to state 38
    func_call        go to state 39
    data_atom        go to state 48


State 123

   42 for_loop: TOKEN_FOR TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_RIGHT_PARENTHESIS if_for_block

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 124


State 124

   42 for_loop: TOKEN_FOR TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS . if_for_block

    TOKEN_FOR         shift, and go to state 90
    TOKEN_PRINT       shift, and go to state 91
    TOKEN_RETURN      shift, and go to state 92
    TOKEN_LEFT_BRACE  shift, and go to state 93
    TOKEN_IDENTIFIER  shift, and go to state 94

    TOKEN_FOR         [reduce using rule 50 (if_for_block)]
    TOKEN_PRINT       [reduce using rule 50 (if_for_block)]
    TOKEN_RETURN      [reduce using rule 50 (if_for_block)]
    TOKEN_LEFT_BRACE  [reduce using rule 50 (if_for_block)]
    TOKEN_IDENTIFIER  [reduce using rule 50 (if_for_block)]
    $default          reduce using rule 50 (if_for_block)

    var_decl      go to state 95
    stmt_block    go to state 96
    stmt          go to state 125
    return_stmt   go to state 98
    expr_assign   go to state 99
    inc_or_dec    go to state 100
    for_loop      go to state 101
    if_for_block  go to state 126
    print_stmt    go to state 102


State 125

   49 if_for_block: stmt .

    $default  reduce using rule 49 (if_for_block)


State 126

   42 for_loop: TOKEN_FOR TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS if_for_block .

    $default  reduce using rule 42 (for_loop)
