Terminals unused in grammar

   TOKEN_ERROR
   TOKEN_AUTO
   TOKEN_WHILE
   TOKEN_NEGATIVE
   TOKEN_NO
   TOKEN_TYPE_SET


Grammar

    0 $accept: program TOKEN_EOF

    1 program: decl_list TOKEN_EOF
    2        | TOKEN_EOF

    3 decl_list: decl decl_list
    4          | decl

    5 decl: var_decl
    6     | func_decl

    7 identifier: TOKEN_IDENTIFIER

    8 func_decl: identifier TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt_block
    9          | identifier TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

   10 var_decl: identifier TOKEN_COLON type TOKEN_SEMICOLON
   11         | identifier TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   12         | array_decl

   13 if_dangle: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE if_dangle
   14          | for_stmt dangle_end
   15          | simple_stmt

   16 stmt: compound_stmt
   17     | simple_stmt

   18 simple_stmt: var_decl
   19            | func_call TOKEN_SEMICOLON
   20            | return_stmt TOKEN_SEMICOLON
   21            | print_stmt TOKEN_SEMICOLON
   22            | inc_or_dec TOKEN_SEMICOLON
   23            | stmt_block
   24            | expr_assign TOKEN_SEMICOLON

   25 compound_stmt: for_stmt reg_end
   26              | TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS stmt
   27              | TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE stmt

   28 dangle_end: TOKEN_SEMICOLON
   29           | if_dangle

   30 reg_end: stmt
   31        | TOKEN_SEMICOLON

   32 access: identifier
   33       | array_access

   34 array_access: identifier TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET array_access_recursive

   35 array_access_recursive: TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET array_access_recursive
   36                       | %empty

   37 type: TOKEN_INT
   38     | TOKEN_FLOAT
   39     | TOKEN_STRING
   40     | TOKEN_BOOLEAN
   41     | TOKEN_CHAR

   42 stmt_block: TOKEN_LEFT_BRACE stmt_list TOKEN_RIGHT_BRACE

   43 func_type: type
   44          | TOKEN_VOID

   45 param_recursive: TOKEN_COMMA identifier TOKEN_COLON type param_recursive
   46                | %empty

   47 every_type: type
   48           | array_type

   49 array_type: TOKEN_ARRAY TOKEN_LEFT_BRACKET array_size TOKEN_RIGHT_BRACKET every_type

   50 array_size: expr
   51           | %empty

   52 array_expr_list: expr expr_list_recursive
   53                | nested_array_braces

   54 nested_array_braces: TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE nested_array_braces_recursive

   55 nested_array_braces_recursive: TOKEN_COMMA TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE nested_array_braces_recursive
   56                              | %empty

   57 array_decl: identifier TOKEN_COLON array_type TOKEN_ASSIGN TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE TOKEN_SEMICOLON
   58           | identifier TOKEN_COLON array_type TOKEN_SEMICOLON

   59 param_list: identifier TOKEN_COLON every_type param_recursive
   60           | %empty

   61 stmt_list: stmt stmt_list
   62          | %empty

   63 return_stmt: TOKEN_RETURN expr
   64            | TOKEN_RETURN

   65 expr_assign: access TOKEN_ASSIGN expr

   66 inc_or_dec: identifier TOKEN_PLUS_PLUS
   67           | identifier TOKEN_MINUS_MINUS

   68 expr_val: expr2

   69 expr: expr_assign
   70     | expr_val

   71 for_stmt: TOKEN_FOR for_cond

   72 for_cond: TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS

   73 for_expr: expr
   74         | %empty

   75 expr_list: expr expr_list_recursive
   76          | %empty

   77 expr_list_recursive: TOKEN_COMMA expr expr_list_recursive
   78                    | %empty

   79 expr2: expr3
   80      | expr2 TOKEN_OR expr3

   81 expr3: expr4
   82      | expr3 TOKEN_AND expr4

   83 expr4: expr4 TOKEN_EQUAL expr5
   84      | expr4 TOKEN_NOT_EQUAL expr5
   85      | expr5

   86 expr5: expr6
   87      | expr5 TOKEN_LESS_THAN_OR_EQUAL expr6
   88      | expr5 TOKEN_LESS_THAN expr6
   89      | expr5 TOKEN_GREATER_THAN expr6
   90      | expr5 TOKEN_GREATER_THAN_OR_EQUAL expr6

   91 expr6: expr7
   92      | expr7 TOKEN_ADD expr6
   93      | expr7 TOKEN_SUBTRACT expr6

   94 expr7: expr8
   95      | expr7 TOKEN_MODULO expr8
   96      | expr7 TOKEN_MULTIPLY expr8
   97      | expr7 TOKEN_DIVISION expr8

   98 expr8: expr9
   99      | TOKEN_NOT expr9
  100      | TOKEN_SUBTRACT expr9
  101      | TOKEN_ADD expr9

  102 expr9: data_atom
  103      | expr9 TOKEN_EXPONENT data_atom

  104 boolean_literal: TOKEN_TRUE
  105                | TOKEN_FALSE

  106 func_call: identifier TOKEN_LEFT_PARENTHESIS expr_list TOKEN_RIGHT_PARENTHESIS

  107 data_atom: TOKEN_STRING_LITERAL
  108          | TOKEN_INT_LITERAL
  109          | TOKEN_CHAR_LITERAL
  110          | TOKEN_FLOAT_LITERAL
  111          | boolean_literal
  112          | func_call
  113          | access
  114          | inc_or_dec
  115          | TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS

  116 print_stmt: TOKEN_PRINT expr_list


Terminals, with rules where they appear

TOKEN_EOF (0) 0 1 2
error (256)
TOKEN_ERROR (258)
TOKEN_ARRAY (259) 49
TOKEN_SUBTRACT (260) 93 100
TOKEN_AUTO (261)
TOKEN_BOOLEAN (262) 40
TOKEN_CHAR (263) 41
TOKEN_ELSE (264) 13 27
TOKEN_FALSE (265) 105
TOKEN_FLOAT (266) 38
TOKEN_FOR (267) 71
TOKEN_FUNCTION (268) 8 9
TOKEN_COLON (269) 8 9 10 11 45 57 58 59
TOKEN_IF (270) 13 26 27
TOKEN_INT (271) 37
TOKEN_PRINT (272) 116
TOKEN_RETURN (273) 63 64
TOKEN_STRING (274) 39
TOKEN_TRUE (275) 104
TOKEN_VOID (276) 44
TOKEN_WHILE (277)
TOKEN_ADD (278) 92 101
TOKEN_NEGATIVE (279)
TOKEN_MULTIPLY (280) 96
TOKEN_DIVISION (281) 97
TOKEN_MODULO (282) 95
TOKEN_EXPONENT (283) 103
TOKEN_LEFT_PARENTHESIS (284) 8 9 13 26 27 72 106 115
TOKEN_RIGHT_PARENTHESIS (285) 8 9 13 26 27 72 106 115
TOKEN_ASSIGN (286) 8 11 57 65
TOKEN_LEFT_BRACE (287) 42 54 55 57
TOKEN_RIGHT_BRACE (288) 42 54 55 57
TOKEN_LEFT_BRACKET (289) 34 35 49
TOKEN_RIGHT_BRACKET (290) 34 35 49
TOKEN_NOT_EQUAL (291) 84
TOKEN_NOT (292) 99
TOKEN_EQUAL (293) 83
TOKEN_NO (294)
TOKEN_LESS_THAN (295) 88
TOKEN_GREATER_THAN (296) 89
TOKEN_AND (297) 82
TOKEN_OR (298) 80
TOKEN_TYPE_SET (299)
TOKEN_SEMICOLON (300) 9 10 11 19 20 21 22 24 28 31 57 58 72
TOKEN_COMMA (301) 45 55 77
TOKEN_PLUS_PLUS (302) 66
TOKEN_MINUS_MINUS (303) 67
TOKEN_LESS_THAN_OR_EQUAL (304) 87
TOKEN_GREATER_THAN_OR_EQUAL (305) 90
TOKEN_IDENTIFIER (306) 7
TOKEN_INT_LITERAL (307) 108
TOKEN_FLOAT_LITERAL (308) 110
TOKEN_STRING_LITERAL (309) 107
TOKEN_CHAR_LITERAL (310) 109


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1 2, on right: 0
decl_list (58)
    on left: 3 4, on right: 1 3
decl (59)
    on left: 5 6, on right: 3 4
identifier (60)
    on left: 7, on right: 8 9 10 11 32 34 45 57 58 59 66 67 106
func_decl (61)
    on left: 8 9, on right: 6
var_decl (62)
    on left: 10 11 12, on right: 5 18
if_dangle (63)
    on left: 13 14 15, on right: 13 27 29
stmt (64)
    on left: 16 17, on right: 26 27 30 61
simple_stmt (65)
    on left: 18 19 20 21 22 23 24, on right: 15 17
compound_stmt (66)
    on left: 25 26 27, on right: 16
dangle_end (67)
    on left: 28 29, on right: 14
reg_end (68)
    on left: 30 31, on right: 25
access (69)
    on left: 32 33, on right: 65 113
array_access (70)
    on left: 34, on right: 33
array_access_recursive (71)
    on left: 35 36, on right: 34 35
type (72)
    on left: 37 38 39 40 41, on right: 10 11 43 45 47
stmt_block (73)
    on left: 42, on right: 8 23
func_type (74)
    on left: 43 44, on right: 8 9
param_recursive (75)
    on left: 45 46, on right: 45 59
every_type (76)
    on left: 47 48, on right: 49 59
array_type (77)
    on left: 49, on right: 48 57 58
array_size (78)
    on left: 50 51, on right: 49
array_expr_list (79)
    on left: 52 53, on right: 54 55 57
nested_array_braces (80)
    on left: 54, on right: 53
nested_array_braces_recursive (81)
    on left: 55 56, on right: 54 55
array_decl (82)
    on left: 57 58, on right: 12
param_list (83)
    on left: 59 60, on right: 8 9
stmt_list (84)
    on left: 61 62, on right: 42 61
return_stmt (85)
    on left: 63 64, on right: 20
expr_assign (86)
    on left: 65, on right: 24 69
inc_or_dec (87)
    on left: 66 67, on right: 22 114
expr_val (88)
    on left: 68, on right: 70
expr (89)
    on left: 69 70, on right: 11 13 26 27 34 35 50 52 63 65 73 75 77
    115
for_stmt (90)
    on left: 71, on right: 14 25
for_cond (91)
    on left: 72, on right: 71
for_expr (92)
    on left: 73 74, on right: 72
expr_list (93)
    on left: 75 76, on right: 106 116
expr_list_recursive (94)
    on left: 77 78, on right: 52 75 77
expr2 (95)
    on left: 79 80, on right: 68 80
expr3 (96)
    on left: 81 82, on right: 79 80 82
expr4 (97)
    on left: 83 84 85, on right: 81 82 83 84
expr5 (98)
    on left: 86 87 88 89 90, on right: 83 84 85 87 88 89 90
expr6 (99)
    on left: 91 92 93, on right: 86 87 88 89 90 92 93
expr7 (100)
    on left: 94 95 96 97, on right: 91 92 93 95 96 97
expr8 (101)
    on left: 98 99 100 101, on right: 94 95 96 97
expr9 (102)
    on left: 102 103, on right: 98 99 100 101 103
boolean_literal (103)
    on left: 104 105, on right: 111
func_call (104)
    on left: 106, on right: 19 112
data_atom (105)
    on left: 107 108 109 110 111 112 113 114 115, on right: 102 103
print_stmt (106)
    on left: 116, on right: 21


State 0

    0 $accept: . program TOKEN_EOF

    TOKEN_EOF         shift, and go to state 1
    TOKEN_IDENTIFIER  shift, and go to state 2

    program     go to state 3
    decl_list   go to state 4
    decl        go to state 5
    identifier  go to state 6
    func_decl   go to state 7
    var_decl    go to state 8
    array_decl  go to state 9


State 1

    2 program: TOKEN_EOF .

    $default  reduce using rule 2 (program)


State 2

    7 identifier: TOKEN_IDENTIFIER .

    $default  reduce using rule 7 (identifier)


State 3

    0 $accept: program . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 10


State 4

    1 program: decl_list . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 11


State 5

    3 decl_list: decl . decl_list
    4          | decl .

    TOKEN_IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 4 (decl_list)

    decl_list   go to state 12
    decl        go to state 5
    identifier  go to state 6
    func_decl   go to state 7
    var_decl    go to state 8
    array_decl  go to state 9


State 6

    8 func_decl: identifier . TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt_block
    9          | identifier . TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON
   10 var_decl: identifier . TOKEN_COLON type TOKEN_SEMICOLON
   11         | identifier . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   57 array_decl: identifier . TOKEN_COLON array_type TOKEN_ASSIGN TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE TOKEN_SEMICOLON
   58           | identifier . TOKEN_COLON array_type TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 13


State 7

    6 decl: func_decl .

    $default  reduce using rule 6 (decl)


State 8

    5 decl: var_decl .

    $default  reduce using rule 5 (decl)


State 9

   12 var_decl: array_decl .

    $default  reduce using rule 12 (var_decl)


State 10

    0 $accept: program TOKEN_EOF .

    $default  accept


State 11

    1 program: decl_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 12

    3 decl_list: decl decl_list .

    $default  reduce using rule 3 (decl_list)


State 13

    8 func_decl: identifier TOKEN_COLON . TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt_block
    9          | identifier TOKEN_COLON . TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON
   10 var_decl: identifier TOKEN_COLON . type TOKEN_SEMICOLON
   11         | identifier TOKEN_COLON . type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   57 array_decl: identifier TOKEN_COLON . array_type TOKEN_ASSIGN TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE TOKEN_SEMICOLON
   58           | identifier TOKEN_COLON . array_type TOKEN_SEMICOLON

    TOKEN_ARRAY     shift, and go to state 14
    TOKEN_BOOLEAN   shift, and go to state 15
    TOKEN_CHAR      shift, and go to state 16
    TOKEN_FLOAT     shift, and go to state 17
    TOKEN_FUNCTION  shift, and go to state 18
    TOKEN_INT       shift, and go to state 19
    TOKEN_STRING    shift, and go to state 20

    type        go to state 21
    array_type  go to state 22


State 14

   49 array_type: TOKEN_ARRAY . TOKEN_LEFT_BRACKET array_size TOKEN_RIGHT_BRACKET every_type

    TOKEN_LEFT_BRACKET  shift, and go to state 23


State 15

   40 type: TOKEN_BOOLEAN .

    $default  reduce using rule 40 (type)


State 16

   41 type: TOKEN_CHAR .

    $default  reduce using rule 41 (type)


State 17

   38 type: TOKEN_FLOAT .

    $default  reduce using rule 38 (type)


State 18

    8 func_decl: identifier TOKEN_COLON TOKEN_FUNCTION . func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt_block
    9          | identifier TOKEN_COLON TOKEN_FUNCTION . func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_BOOLEAN  shift, and go to state 15
    TOKEN_CHAR     shift, and go to state 16
    TOKEN_FLOAT    shift, and go to state 17
    TOKEN_INT      shift, and go to state 19
    TOKEN_STRING   shift, and go to state 20
    TOKEN_VOID     shift, and go to state 24

    type       go to state 25
    func_type  go to state 26


State 19

   37 type: TOKEN_INT .

    $default  reduce using rule 37 (type)


State 20

   39 type: TOKEN_STRING .

    $default  reduce using rule 39 (type)


State 21

   10 var_decl: identifier TOKEN_COLON type . TOKEN_SEMICOLON
   11         | identifier TOKEN_COLON type . TOKEN_ASSIGN expr TOKEN_SEMICOLON

    TOKEN_ASSIGN     shift, and go to state 27
    TOKEN_SEMICOLON  shift, and go to state 28


State 22

   57 array_decl: identifier TOKEN_COLON array_type . TOKEN_ASSIGN TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE TOKEN_SEMICOLON
   58           | identifier TOKEN_COLON array_type . TOKEN_SEMICOLON

    TOKEN_ASSIGN     shift, and go to state 29
    TOKEN_SEMICOLON  shift, and go to state 30


State 23

   49 array_type: TOKEN_ARRAY TOKEN_LEFT_BRACKET . array_size TOKEN_RIGHT_BRACKET every_type

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    $default  reduce using rule 51 (array_size)

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    array_size       go to state 44
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 48
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 24

   44 func_type: TOKEN_VOID .

    $default  reduce using rule 44 (func_type)


State 25

   43 func_type: type .

    $default  reduce using rule 43 (func_type)


State 26

    8 func_decl: identifier TOKEN_COLON TOKEN_FUNCTION func_type . TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt_block
    9          | identifier TOKEN_COLON TOKEN_FUNCTION func_type . TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_LEFT_PARENTHESIS  shift, and go to state 60


State 27

   11 var_decl: identifier TOKEN_COLON type TOKEN_ASSIGN . expr TOKEN_SEMICOLON

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 61
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 28

   10 var_decl: identifier TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 10 (var_decl)


State 29

   57 array_decl: identifier TOKEN_COLON array_type TOKEN_ASSIGN . TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE TOKEN_SEMICOLON

    TOKEN_LEFT_BRACE  shift, and go to state 62


State 30

   58 array_decl: identifier TOKEN_COLON array_type TOKEN_SEMICOLON .

    $default  reduce using rule 58 (array_decl)


State 31

  100 expr8: TOKEN_SUBTRACT . expr9

    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr9            go to state 64
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 32

  105 boolean_literal: TOKEN_FALSE .

    $default  reduce using rule 105 (boolean_literal)


State 33

  104 boolean_literal: TOKEN_TRUE .

    $default  reduce using rule 104 (boolean_literal)


State 34

  101 expr8: TOKEN_ADD . expr9

    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr9            go to state 65
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 35

  115 data_atom: TOKEN_LEFT_PARENTHESIS . expr TOKEN_RIGHT_PARENTHESIS

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 66
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 36

   99 expr8: TOKEN_NOT . expr9

    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr9            go to state 67
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 37

  108 data_atom: TOKEN_INT_LITERAL .

    $default  reduce using rule 108 (data_atom)


State 38

  110 data_atom: TOKEN_FLOAT_LITERAL .

    $default  reduce using rule 110 (data_atom)


State 39

  107 data_atom: TOKEN_STRING_LITERAL .

    $default  reduce using rule 107 (data_atom)


State 40

  109 data_atom: TOKEN_CHAR_LITERAL .

    $default  reduce using rule 109 (data_atom)


State 41

   32 access: identifier .
   34 array_access: identifier . TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET array_access_recursive
   66 inc_or_dec: identifier . TOKEN_PLUS_PLUS
   67           | identifier . TOKEN_MINUS_MINUS
  106 func_call: identifier . TOKEN_LEFT_PARENTHESIS expr_list TOKEN_RIGHT_PARENTHESIS

    TOKEN_LEFT_PARENTHESIS  shift, and go to state 68
    TOKEN_LEFT_BRACKET      shift, and go to state 69
    TOKEN_PLUS_PLUS         shift, and go to state 70
    TOKEN_MINUS_MINUS       shift, and go to state 71

    $default  reduce using rule 32 (access)


State 42

   65 expr_assign: access . TOKEN_ASSIGN expr
  113 data_atom: access .

    TOKEN_ASSIGN  shift, and go to state 72

    $default  reduce using rule 113 (data_atom)


State 43

   33 access: array_access .

    $default  reduce using rule 33 (access)


State 44

   49 array_type: TOKEN_ARRAY TOKEN_LEFT_BRACKET array_size . TOKEN_RIGHT_BRACKET every_type

    TOKEN_RIGHT_BRACKET  shift, and go to state 73


State 45

   69 expr: expr_assign .

    $default  reduce using rule 69 (expr)


State 46

  114 data_atom: inc_or_dec .

    $default  reduce using rule 114 (data_atom)


State 47

   70 expr: expr_val .

    $default  reduce using rule 70 (expr)


State 48

   50 array_size: expr .

    $default  reduce using rule 50 (array_size)


State 49

   68 expr_val: expr2 .
   80 expr2: expr2 . TOKEN_OR expr3

    TOKEN_OR  shift, and go to state 74

    $default  reduce using rule 68 (expr_val)


State 50

   79 expr2: expr3 .
   82 expr3: expr3 . TOKEN_AND expr4

    TOKEN_AND  shift, and go to state 75

    $default  reduce using rule 79 (expr2)


State 51

   81 expr3: expr4 .
   83 expr4: expr4 . TOKEN_EQUAL expr5
   84      | expr4 . TOKEN_NOT_EQUAL expr5

    TOKEN_NOT_EQUAL  shift, and go to state 76
    TOKEN_EQUAL      shift, and go to state 77

    $default  reduce using rule 81 (expr3)


State 52

   85 expr4: expr5 .
   87 expr5: expr5 . TOKEN_LESS_THAN_OR_EQUAL expr6
   88      | expr5 . TOKEN_LESS_THAN expr6
   89      | expr5 . TOKEN_GREATER_THAN expr6
   90      | expr5 . TOKEN_GREATER_THAN_OR_EQUAL expr6

    TOKEN_LESS_THAN              shift, and go to state 78
    TOKEN_GREATER_THAN           shift, and go to state 79
    TOKEN_LESS_THAN_OR_EQUAL     shift, and go to state 80
    TOKEN_GREATER_THAN_OR_EQUAL  shift, and go to state 81

    $default  reduce using rule 85 (expr4)


State 53

   86 expr5: expr6 .

    $default  reduce using rule 86 (expr5)


State 54

   91 expr6: expr7 .
   92      | expr7 . TOKEN_ADD expr6
   93      | expr7 . TOKEN_SUBTRACT expr6
   95 expr7: expr7 . TOKEN_MODULO expr8
   96      | expr7 . TOKEN_MULTIPLY expr8
   97      | expr7 . TOKEN_DIVISION expr8

    TOKEN_SUBTRACT  shift, and go to state 82
    TOKEN_ADD       shift, and go to state 83
    TOKEN_MULTIPLY  shift, and go to state 84
    TOKEN_DIVISION  shift, and go to state 85
    TOKEN_MODULO    shift, and go to state 86

    $default  reduce using rule 91 (expr6)


State 55

   94 expr7: expr8 .

    $default  reduce using rule 94 (expr7)


State 56

   98 expr8: expr9 .
  103 expr9: expr9 . TOKEN_EXPONENT data_atom

    TOKEN_EXPONENT  shift, and go to state 87

    $default  reduce using rule 98 (expr8)


State 57

  111 data_atom: boolean_literal .

    $default  reduce using rule 111 (data_atom)


State 58

  112 data_atom: func_call .

    $default  reduce using rule 112 (data_atom)


State 59

  102 expr9: data_atom .

    $default  reduce using rule 102 (expr9)


State 60

    8 func_decl: identifier TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS . param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt_block
    9          | identifier TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS . param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 60 (param_list)

    identifier  go to state 88
    param_list  go to state 89


State 61

   11 var_decl: identifier TOKEN_COLON type TOKEN_ASSIGN expr . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 90


State 62

   57 array_decl: identifier TOKEN_COLON array_type TOKEN_ASSIGN TOKEN_LEFT_BRACE . array_expr_list TOKEN_RIGHT_BRACE TOKEN_SEMICOLON

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_LEFT_BRACE        shift, and go to state 91
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier           go to state 41
    access               go to state 42
    array_access         go to state 43
    array_expr_list      go to state 92
    nested_array_braces  go to state 93
    expr_assign          go to state 45
    inc_or_dec           go to state 46
    expr_val             go to state 47
    expr                 go to state 94
    expr2                go to state 49
    expr3                go to state 50
    expr4                go to state 51
    expr5                go to state 52
    expr6                go to state 53
    expr7                go to state 54
    expr8                go to state 55
    expr9                go to state 56
    boolean_literal      go to state 57
    func_call            go to state 58
    data_atom            go to state 59


State 63

  113 data_atom: access .

    $default  reduce using rule 113 (data_atom)


State 64

  100 expr8: TOKEN_SUBTRACT expr9 .
  103 expr9: expr9 . TOKEN_EXPONENT data_atom

    TOKEN_EXPONENT  shift, and go to state 87

    $default  reduce using rule 100 (expr8)


State 65

  101 expr8: TOKEN_ADD expr9 .
  103 expr9: expr9 . TOKEN_EXPONENT data_atom

    TOKEN_EXPONENT  shift, and go to state 87

    $default  reduce using rule 101 (expr8)


State 66

  115 data_atom: TOKEN_LEFT_PARENTHESIS expr . TOKEN_RIGHT_PARENTHESIS

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 95


State 67

   99 expr8: TOKEN_NOT expr9 .
  103 expr9: expr9 . TOKEN_EXPONENT data_atom

    TOKEN_EXPONENT  shift, and go to state 87

    $default  reduce using rule 99 (expr8)


State 68

  106 func_call: identifier TOKEN_LEFT_PARENTHESIS . expr_list TOKEN_RIGHT_PARENTHESIS

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    $default  reduce using rule 76 (expr_list)

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 96
    expr_list        go to state 97
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 69

   34 array_access: identifier TOKEN_LEFT_BRACKET . expr TOKEN_RIGHT_BRACKET array_access_recursive

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 98
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 70

   66 inc_or_dec: identifier TOKEN_PLUS_PLUS .

    $default  reduce using rule 66 (inc_or_dec)


State 71

   67 inc_or_dec: identifier TOKEN_MINUS_MINUS .

    $default  reduce using rule 67 (inc_or_dec)


State 72

   65 expr_assign: access TOKEN_ASSIGN . expr

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 99
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 73

   49 array_type: TOKEN_ARRAY TOKEN_LEFT_BRACKET array_size TOKEN_RIGHT_BRACKET . every_type

    TOKEN_ARRAY    shift, and go to state 14
    TOKEN_BOOLEAN  shift, and go to state 15
    TOKEN_CHAR     shift, and go to state 16
    TOKEN_FLOAT    shift, and go to state 17
    TOKEN_INT      shift, and go to state 19
    TOKEN_STRING   shift, and go to state 20

    type        go to state 100
    every_type  go to state 101
    array_type  go to state 102


State 74

   80 expr2: expr2 TOKEN_OR . expr3

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr3            go to state 103
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 75

   82 expr3: expr3 TOKEN_AND . expr4

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr4            go to state 104
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 76

   84 expr4: expr4 TOKEN_NOT_EQUAL . expr5

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr5            go to state 105
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 77

   83 expr4: expr4 TOKEN_EQUAL . expr5

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr5            go to state 106
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 78

   88 expr5: expr5 TOKEN_LESS_THAN . expr6

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr6            go to state 107
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 79

   89 expr5: expr5 TOKEN_GREATER_THAN . expr6

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr6            go to state 108
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 80

   87 expr5: expr5 TOKEN_LESS_THAN_OR_EQUAL . expr6

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr6            go to state 109
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 81

   90 expr5: expr5 TOKEN_GREATER_THAN_OR_EQUAL . expr6

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr6            go to state 110
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 82

   93 expr6: expr7 TOKEN_SUBTRACT . expr6

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr6            go to state 111
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 83

   92 expr6: expr7 TOKEN_ADD . expr6

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr6            go to state 112
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 84

   96 expr7: expr7 TOKEN_MULTIPLY . expr8

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr8            go to state 113
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 85

   97 expr7: expr7 TOKEN_DIVISION . expr8

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr8            go to state 114
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 86

   95 expr7: expr7 TOKEN_MODULO . expr8

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    expr8            go to state 115
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 87

  103 expr9: expr9 TOKEN_EXPONENT . data_atom

    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 63
    array_access     go to state 43
    inc_or_dec       go to state 46
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 116


State 88

   59 param_list: identifier . TOKEN_COLON every_type param_recursive

    TOKEN_COLON  shift, and go to state 117


State 89

    8 func_decl: identifier TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list . TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt_block
    9          | identifier TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list . TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 118


State 90

   11 var_decl: identifier TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON .

    $default  reduce using rule 11 (var_decl)


State 91

   54 nested_array_braces: TOKEN_LEFT_BRACE . array_expr_list TOKEN_RIGHT_BRACE nested_array_braces_recursive

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_LEFT_BRACE        shift, and go to state 91
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier           go to state 41
    access               go to state 42
    array_access         go to state 43
    array_expr_list      go to state 119
    nested_array_braces  go to state 93
    expr_assign          go to state 45
    inc_or_dec           go to state 46
    expr_val             go to state 47
    expr                 go to state 94
    expr2                go to state 49
    expr3                go to state 50
    expr4                go to state 51
    expr5                go to state 52
    expr6                go to state 53
    expr7                go to state 54
    expr8                go to state 55
    expr9                go to state 56
    boolean_literal      go to state 57
    func_call            go to state 58
    data_atom            go to state 59


State 92

   57 array_decl: identifier TOKEN_COLON array_type TOKEN_ASSIGN TOKEN_LEFT_BRACE array_expr_list . TOKEN_RIGHT_BRACE TOKEN_SEMICOLON

    TOKEN_RIGHT_BRACE  shift, and go to state 120


State 93

   53 array_expr_list: nested_array_braces .

    $default  reduce using rule 53 (array_expr_list)


State 94

   52 array_expr_list: expr . expr_list_recursive

    TOKEN_COMMA  shift, and go to state 121

    $default  reduce using rule 78 (expr_list_recursive)

    expr_list_recursive  go to state 122


State 95

  115 data_atom: TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS .

    $default  reduce using rule 115 (data_atom)


State 96

   75 expr_list: expr . expr_list_recursive

    TOKEN_COMMA  shift, and go to state 121

    $default  reduce using rule 78 (expr_list_recursive)

    expr_list_recursive  go to state 123


State 97

  106 func_call: identifier TOKEN_LEFT_PARENTHESIS expr_list . TOKEN_RIGHT_PARENTHESIS

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 124


State 98

   34 array_access: identifier TOKEN_LEFT_BRACKET expr . TOKEN_RIGHT_BRACKET array_access_recursive

    TOKEN_RIGHT_BRACKET  shift, and go to state 125


State 99

   65 expr_assign: access TOKEN_ASSIGN expr .

    $default  reduce using rule 65 (expr_assign)


State 100

   47 every_type: type .

    $default  reduce using rule 47 (every_type)


State 101

   49 array_type: TOKEN_ARRAY TOKEN_LEFT_BRACKET array_size TOKEN_RIGHT_BRACKET every_type .

    $default  reduce using rule 49 (array_type)


State 102

   48 every_type: array_type .

    $default  reduce using rule 48 (every_type)


State 103

   80 expr2: expr2 TOKEN_OR expr3 .
   82 expr3: expr3 . TOKEN_AND expr4

    TOKEN_AND  shift, and go to state 75

    $default  reduce using rule 80 (expr2)


State 104

   82 expr3: expr3 TOKEN_AND expr4 .
   83 expr4: expr4 . TOKEN_EQUAL expr5
   84      | expr4 . TOKEN_NOT_EQUAL expr5

    TOKEN_NOT_EQUAL  shift, and go to state 76
    TOKEN_EQUAL      shift, and go to state 77

    $default  reduce using rule 82 (expr3)


State 105

   84 expr4: expr4 TOKEN_NOT_EQUAL expr5 .
   87 expr5: expr5 . TOKEN_LESS_THAN_OR_EQUAL expr6
   88      | expr5 . TOKEN_LESS_THAN expr6
   89      | expr5 . TOKEN_GREATER_THAN expr6
   90      | expr5 . TOKEN_GREATER_THAN_OR_EQUAL expr6

    TOKEN_LESS_THAN              shift, and go to state 78
    TOKEN_GREATER_THAN           shift, and go to state 79
    TOKEN_LESS_THAN_OR_EQUAL     shift, and go to state 80
    TOKEN_GREATER_THAN_OR_EQUAL  shift, and go to state 81

    $default  reduce using rule 84 (expr4)


State 106

   83 expr4: expr4 TOKEN_EQUAL expr5 .
   87 expr5: expr5 . TOKEN_LESS_THAN_OR_EQUAL expr6
   88      | expr5 . TOKEN_LESS_THAN expr6
   89      | expr5 . TOKEN_GREATER_THAN expr6
   90      | expr5 . TOKEN_GREATER_THAN_OR_EQUAL expr6

    TOKEN_LESS_THAN              shift, and go to state 78
    TOKEN_GREATER_THAN           shift, and go to state 79
    TOKEN_LESS_THAN_OR_EQUAL     shift, and go to state 80
    TOKEN_GREATER_THAN_OR_EQUAL  shift, and go to state 81

    $default  reduce using rule 83 (expr4)


State 107

   88 expr5: expr5 TOKEN_LESS_THAN expr6 .

    $default  reduce using rule 88 (expr5)


State 108

   89 expr5: expr5 TOKEN_GREATER_THAN expr6 .

    $default  reduce using rule 89 (expr5)


State 109

   87 expr5: expr5 TOKEN_LESS_THAN_OR_EQUAL expr6 .

    $default  reduce using rule 87 (expr5)


State 110

   90 expr5: expr5 TOKEN_GREATER_THAN_OR_EQUAL expr6 .

    $default  reduce using rule 90 (expr5)


State 111

   93 expr6: expr7 TOKEN_SUBTRACT expr6 .

    $default  reduce using rule 93 (expr6)


State 112

   92 expr6: expr7 TOKEN_ADD expr6 .

    $default  reduce using rule 92 (expr6)


State 113

   96 expr7: expr7 TOKEN_MULTIPLY expr8 .

    $default  reduce using rule 96 (expr7)


State 114

   97 expr7: expr7 TOKEN_DIVISION expr8 .

    $default  reduce using rule 97 (expr7)


State 115

   95 expr7: expr7 TOKEN_MODULO expr8 .

    $default  reduce using rule 95 (expr7)


State 116

  103 expr9: expr9 TOKEN_EXPONENT data_atom .

    $default  reduce using rule 103 (expr9)


State 117

   59 param_list: identifier TOKEN_COLON . every_type param_recursive

    TOKEN_ARRAY    shift, and go to state 14
    TOKEN_BOOLEAN  shift, and go to state 15
    TOKEN_CHAR     shift, and go to state 16
    TOKEN_FLOAT    shift, and go to state 17
    TOKEN_INT      shift, and go to state 19
    TOKEN_STRING   shift, and go to state 20

    type        go to state 100
    every_type  go to state 126
    array_type  go to state 102


State 118

    8 func_decl: identifier TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS . TOKEN_ASSIGN stmt_block
    9          | identifier TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS . TOKEN_SEMICOLON

    TOKEN_ASSIGN     shift, and go to state 127
    TOKEN_SEMICOLON  shift, and go to state 128


State 119

   54 nested_array_braces: TOKEN_LEFT_BRACE array_expr_list . TOKEN_RIGHT_BRACE nested_array_braces_recursive

    TOKEN_RIGHT_BRACE  shift, and go to state 129


State 120

   57 array_decl: identifier TOKEN_COLON array_type TOKEN_ASSIGN TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 130


State 121

   77 expr_list_recursive: TOKEN_COMMA . expr expr_list_recursive

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 131
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 122

   52 array_expr_list: expr expr_list_recursive .

    $default  reduce using rule 52 (array_expr_list)


State 123

   75 expr_list: expr expr_list_recursive .

    $default  reduce using rule 75 (expr_list)


State 124

  106 func_call: identifier TOKEN_LEFT_PARENTHESIS expr_list TOKEN_RIGHT_PARENTHESIS .

    $default  reduce using rule 106 (func_call)


State 125

   34 array_access: identifier TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET . array_access_recursive

    TOKEN_LEFT_BRACKET  shift, and go to state 132

    $default  reduce using rule 36 (array_access_recursive)

    array_access_recursive  go to state 133


State 126

   59 param_list: identifier TOKEN_COLON every_type . param_recursive

    TOKEN_COMMA  shift, and go to state 134

    $default  reduce using rule 46 (param_recursive)

    param_recursive  go to state 135


State 127

    8 func_decl: identifier TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN . stmt_block

    TOKEN_LEFT_BRACE  shift, and go to state 136

    stmt_block  go to state 137


State 128

    9 func_decl: identifier TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_SEMICOLON .

    $default  reduce using rule 9 (func_decl)


State 129

   54 nested_array_braces: TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE . nested_array_braces_recursive

    TOKEN_COMMA  shift, and go to state 138

    $default  reduce using rule 56 (nested_array_braces_recursive)

    nested_array_braces_recursive  go to state 139


State 130

   57 array_decl: identifier TOKEN_COLON array_type TOKEN_ASSIGN TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE TOKEN_SEMICOLON .

    $default  reduce using rule 57 (array_decl)


State 131

   77 expr_list_recursive: TOKEN_COMMA expr . expr_list_recursive

    TOKEN_COMMA  shift, and go to state 121

    $default  reduce using rule 78 (expr_list_recursive)

    expr_list_recursive  go to state 140


State 132

   35 array_access_recursive: TOKEN_LEFT_BRACKET . expr TOKEN_RIGHT_BRACKET array_access_recursive

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 141
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 133

   34 array_access: identifier TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET array_access_recursive .

    $default  reduce using rule 34 (array_access)


State 134

   45 param_recursive: TOKEN_COMMA . identifier TOKEN_COLON type param_recursive

    TOKEN_IDENTIFIER  shift, and go to state 2

    identifier  go to state 142


State 135

   59 param_list: identifier TOKEN_COLON every_type param_recursive .

    $default  reduce using rule 59 (param_list)


State 136

   42 stmt_block: TOKEN_LEFT_BRACE . stmt_list TOKEN_RIGHT_BRACE

    TOKEN_FOR         shift, and go to state 143
    TOKEN_IF          shift, and go to state 144
    TOKEN_PRINT       shift, and go to state 145
    TOKEN_RETURN      shift, and go to state 146
    TOKEN_LEFT_BRACE  shift, and go to state 136
    TOKEN_IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 62 (stmt_list)

    identifier     go to state 147
    var_decl       go to state 148
    stmt           go to state 149
    simple_stmt    go to state 150
    compound_stmt  go to state 151
    access         go to state 152
    array_access   go to state 43
    stmt_block     go to state 153
    array_decl     go to state 9
    stmt_list      go to state 154
    return_stmt    go to state 155
    expr_assign    go to state 156
    inc_or_dec     go to state 157
    for_stmt       go to state 158
    func_call      go to state 159
    print_stmt     go to state 160


State 137

    8 func_decl: identifier TOKEN_COLON TOKEN_FUNCTION func_type TOKEN_LEFT_PARENTHESIS param_list TOKEN_RIGHT_PARENTHESIS TOKEN_ASSIGN stmt_block .

    $default  reduce using rule 8 (func_decl)


State 138

   55 nested_array_braces_recursive: TOKEN_COMMA . TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE nested_array_braces_recursive

    TOKEN_LEFT_BRACE  shift, and go to state 161


State 139

   54 nested_array_braces: TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE nested_array_braces_recursive .

    $default  reduce using rule 54 (nested_array_braces)


State 140

   77 expr_list_recursive: TOKEN_COMMA expr expr_list_recursive .

    $default  reduce using rule 77 (expr_list_recursive)


State 141

   35 array_access_recursive: TOKEN_LEFT_BRACKET expr . TOKEN_RIGHT_BRACKET array_access_recursive

    TOKEN_RIGHT_BRACKET  shift, and go to state 162


State 142

   45 param_recursive: TOKEN_COMMA identifier . TOKEN_COLON type param_recursive

    TOKEN_COLON  shift, and go to state 163


State 143

   71 for_stmt: TOKEN_FOR . for_cond

    TOKEN_LEFT_PARENTHESIS  shift, and go to state 164

    for_cond  go to state 165


State 144

   26 compound_stmt: TOKEN_IF . TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS stmt
   27              | TOKEN_IF . TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE stmt

    TOKEN_LEFT_PARENTHESIS  shift, and go to state 166


State 145

  116 print_stmt: TOKEN_PRINT . expr_list

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    $default  reduce using rule 76 (expr_list)

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 96
    expr_list        go to state 167
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 146

   63 return_stmt: TOKEN_RETURN . expr
   64            | TOKEN_RETURN .

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    $default  reduce using rule 64 (return_stmt)

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 168
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 147

   10 var_decl: identifier . TOKEN_COLON type TOKEN_SEMICOLON
   11         | identifier . TOKEN_COLON type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   32 access: identifier .
   34 array_access: identifier . TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET array_access_recursive
   57 array_decl: identifier . TOKEN_COLON array_type TOKEN_ASSIGN TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE TOKEN_SEMICOLON
   58           | identifier . TOKEN_COLON array_type TOKEN_SEMICOLON
   66 inc_or_dec: identifier . TOKEN_PLUS_PLUS
   67           | identifier . TOKEN_MINUS_MINUS
  106 func_call: identifier . TOKEN_LEFT_PARENTHESIS expr_list TOKEN_RIGHT_PARENTHESIS

    TOKEN_COLON             shift, and go to state 169
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 68
    TOKEN_LEFT_BRACKET      shift, and go to state 69
    TOKEN_PLUS_PLUS         shift, and go to state 70
    TOKEN_MINUS_MINUS       shift, and go to state 71

    $default  reduce using rule 32 (access)


State 148

   18 simple_stmt: var_decl .

    $default  reduce using rule 18 (simple_stmt)


State 149

   61 stmt_list: stmt . stmt_list

    TOKEN_FOR         shift, and go to state 143
    TOKEN_IF          shift, and go to state 144
    TOKEN_PRINT       shift, and go to state 145
    TOKEN_RETURN      shift, and go to state 146
    TOKEN_LEFT_BRACE  shift, and go to state 136
    TOKEN_IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 62 (stmt_list)

    identifier     go to state 147
    var_decl       go to state 148
    stmt           go to state 149
    simple_stmt    go to state 150
    compound_stmt  go to state 151
    access         go to state 152
    array_access   go to state 43
    stmt_block     go to state 153
    array_decl     go to state 9
    stmt_list      go to state 170
    return_stmt    go to state 155
    expr_assign    go to state 156
    inc_or_dec     go to state 157
    for_stmt       go to state 158
    func_call      go to state 159
    print_stmt     go to state 160


State 150

   17 stmt: simple_stmt .

    $default  reduce using rule 17 (stmt)


State 151

   16 stmt: compound_stmt .

    $default  reduce using rule 16 (stmt)


State 152

   65 expr_assign: access . TOKEN_ASSIGN expr

    TOKEN_ASSIGN  shift, and go to state 72


State 153

   23 simple_stmt: stmt_block .

    $default  reduce using rule 23 (simple_stmt)


State 154

   42 stmt_block: TOKEN_LEFT_BRACE stmt_list . TOKEN_RIGHT_BRACE

    TOKEN_RIGHT_BRACE  shift, and go to state 171


State 155

   20 simple_stmt: return_stmt . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 172


State 156

   24 simple_stmt: expr_assign . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 173


State 157

   22 simple_stmt: inc_or_dec . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 174


State 158

   25 compound_stmt: for_stmt . reg_end

    TOKEN_FOR         shift, and go to state 143
    TOKEN_IF          shift, and go to state 144
    TOKEN_PRINT       shift, and go to state 145
    TOKEN_RETURN      shift, and go to state 146
    TOKEN_LEFT_BRACE  shift, and go to state 136
    TOKEN_SEMICOLON   shift, and go to state 175
    TOKEN_IDENTIFIER  shift, and go to state 2

    identifier     go to state 147
    var_decl       go to state 148
    stmt           go to state 176
    simple_stmt    go to state 150
    compound_stmt  go to state 151
    reg_end        go to state 177
    access         go to state 152
    array_access   go to state 43
    stmt_block     go to state 153
    array_decl     go to state 9
    return_stmt    go to state 155
    expr_assign    go to state 156
    inc_or_dec     go to state 157
    for_stmt       go to state 158
    func_call      go to state 159
    print_stmt     go to state 160


State 159

   19 simple_stmt: func_call . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 178


State 160

   21 simple_stmt: print_stmt . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 179


State 161

   55 nested_array_braces_recursive: TOKEN_COMMA TOKEN_LEFT_BRACE . array_expr_list TOKEN_RIGHT_BRACE nested_array_braces_recursive

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_LEFT_BRACE        shift, and go to state 91
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier           go to state 41
    access               go to state 42
    array_access         go to state 43
    array_expr_list      go to state 180
    nested_array_braces  go to state 93
    expr_assign          go to state 45
    inc_or_dec           go to state 46
    expr_val             go to state 47
    expr                 go to state 94
    expr2                go to state 49
    expr3                go to state 50
    expr4                go to state 51
    expr5                go to state 52
    expr6                go to state 53
    expr7                go to state 54
    expr8                go to state 55
    expr9                go to state 56
    boolean_literal      go to state 57
    func_call            go to state 58
    data_atom            go to state 59


State 162

   35 array_access_recursive: TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET . array_access_recursive

    TOKEN_LEFT_BRACKET  shift, and go to state 132

    $default  reduce using rule 36 (array_access_recursive)

    array_access_recursive  go to state 181


State 163

   45 param_recursive: TOKEN_COMMA identifier TOKEN_COLON . type param_recursive

    TOKEN_BOOLEAN  shift, and go to state 15
    TOKEN_CHAR     shift, and go to state 16
    TOKEN_FLOAT    shift, and go to state 17
    TOKEN_INT      shift, and go to state 19
    TOKEN_STRING   shift, and go to state 20

    type  go to state 182


State 164

   72 for_cond: TOKEN_LEFT_PARENTHESIS . for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    $default  reduce using rule 74 (for_expr)

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 183
    for_expr         go to state 184
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 165

   71 for_stmt: TOKEN_FOR for_cond .

    $default  reduce using rule 71 (for_stmt)


State 166

   26 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS . expr TOKEN_RIGHT_PARENTHESIS stmt
   27              | TOKEN_IF TOKEN_LEFT_PARENTHESIS . expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE stmt

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 185
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 167

  116 print_stmt: TOKEN_PRINT expr_list .

    $default  reduce using rule 116 (print_stmt)


State 168

   63 return_stmt: TOKEN_RETURN expr .

    $default  reduce using rule 63 (return_stmt)


State 169

   10 var_decl: identifier TOKEN_COLON . type TOKEN_SEMICOLON
   11         | identifier TOKEN_COLON . type TOKEN_ASSIGN expr TOKEN_SEMICOLON
   57 array_decl: identifier TOKEN_COLON . array_type TOKEN_ASSIGN TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE TOKEN_SEMICOLON
   58           | identifier TOKEN_COLON . array_type TOKEN_SEMICOLON

    TOKEN_ARRAY    shift, and go to state 14
    TOKEN_BOOLEAN  shift, and go to state 15
    TOKEN_CHAR     shift, and go to state 16
    TOKEN_FLOAT    shift, and go to state 17
    TOKEN_INT      shift, and go to state 19
    TOKEN_STRING   shift, and go to state 20

    type        go to state 21
    array_type  go to state 22


State 170

   61 stmt_list: stmt stmt_list .

    $default  reduce using rule 61 (stmt_list)


State 171

   42 stmt_block: TOKEN_LEFT_BRACE stmt_list TOKEN_RIGHT_BRACE .

    $default  reduce using rule 42 (stmt_block)


State 172

   20 simple_stmt: return_stmt TOKEN_SEMICOLON .

    $default  reduce using rule 20 (simple_stmt)


State 173

   24 simple_stmt: expr_assign TOKEN_SEMICOLON .

    $default  reduce using rule 24 (simple_stmt)


State 174

   22 simple_stmt: inc_or_dec TOKEN_SEMICOLON .

    $default  reduce using rule 22 (simple_stmt)


State 175

   31 reg_end: TOKEN_SEMICOLON .

    $default  reduce using rule 31 (reg_end)


State 176

   30 reg_end: stmt .

    $default  reduce using rule 30 (reg_end)


State 177

   25 compound_stmt: for_stmt reg_end .

    $default  reduce using rule 25 (compound_stmt)


State 178

   19 simple_stmt: func_call TOKEN_SEMICOLON .

    $default  reduce using rule 19 (simple_stmt)


State 179

   21 simple_stmt: print_stmt TOKEN_SEMICOLON .

    $default  reduce using rule 21 (simple_stmt)


State 180

   55 nested_array_braces_recursive: TOKEN_COMMA TOKEN_LEFT_BRACE array_expr_list . TOKEN_RIGHT_BRACE nested_array_braces_recursive

    TOKEN_RIGHT_BRACE  shift, and go to state 186


State 181

   35 array_access_recursive: TOKEN_LEFT_BRACKET expr TOKEN_RIGHT_BRACKET array_access_recursive .

    $default  reduce using rule 35 (array_access_recursive)


State 182

   45 param_recursive: TOKEN_COMMA identifier TOKEN_COLON type . param_recursive

    TOKEN_COMMA  shift, and go to state 134

    $default  reduce using rule 46 (param_recursive)

    param_recursive  go to state 187


State 183

   73 for_expr: expr .

    $default  reduce using rule 73 (for_expr)


State 184

   72 for_cond: TOKEN_LEFT_PARENTHESIS for_expr . TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS

    TOKEN_SEMICOLON  shift, and go to state 188


State 185

   26 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr . TOKEN_RIGHT_PARENTHESIS stmt
   27              | TOKEN_IF TOKEN_LEFT_PARENTHESIS expr . TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE stmt

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 189


State 186

   55 nested_array_braces_recursive: TOKEN_COMMA TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE . nested_array_braces_recursive

    TOKEN_COMMA  shift, and go to state 138

    $default  reduce using rule 56 (nested_array_braces_recursive)

    nested_array_braces_recursive  go to state 190


State 187

   45 param_recursive: TOKEN_COMMA identifier TOKEN_COLON type param_recursive .

    $default  reduce using rule 45 (param_recursive)


State 188

   72 for_cond: TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON . for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    $default  reduce using rule 74 (for_expr)

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 183
    for_expr         go to state 191
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 189

   26 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS . stmt
   27              | TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS . if_dangle TOKEN_ELSE stmt

    TOKEN_FOR         shift, and go to state 143
    TOKEN_IF          shift, and go to state 192
    TOKEN_PRINT       shift, and go to state 145
    TOKEN_RETURN      shift, and go to state 146
    TOKEN_LEFT_BRACE  shift, and go to state 136
    TOKEN_IDENTIFIER  shift, and go to state 2

    identifier     go to state 147
    var_decl       go to state 148
    if_dangle      go to state 193
    stmt           go to state 194
    simple_stmt    go to state 195
    compound_stmt  go to state 151
    access         go to state 152
    array_access   go to state 43
    stmt_block     go to state 153
    array_decl     go to state 9
    return_stmt    go to state 155
    expr_assign    go to state 156
    inc_or_dec     go to state 157
    for_stmt       go to state 196
    func_call      go to state 159
    print_stmt     go to state 160


State 190

   55 nested_array_braces_recursive: TOKEN_COMMA TOKEN_LEFT_BRACE array_expr_list TOKEN_RIGHT_BRACE nested_array_braces_recursive .

    $default  reduce using rule 55 (nested_array_braces_recursive)


State 191

   72 for_cond: TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr . TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS

    TOKEN_SEMICOLON  shift, and go to state 197


State 192

   13 if_dangle: TOKEN_IF . TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE if_dangle
   26 compound_stmt: TOKEN_IF . TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS stmt
   27              | TOKEN_IF . TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE stmt

    TOKEN_LEFT_PARENTHESIS  shift, and go to state 198


State 193

   27 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle . TOKEN_ELSE stmt

    TOKEN_ELSE  shift, and go to state 199


State 194

   26 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 26 (compound_stmt)


State 195

   15 if_dangle: simple_stmt .
   17 stmt: simple_stmt .

    TOKEN_ELSE  reduce using rule 15 (if_dangle)
    $default    reduce using rule 17 (stmt)


State 196

   14 if_dangle: for_stmt . dangle_end
   25 compound_stmt: for_stmt . reg_end

    TOKEN_FOR         shift, and go to state 143
    TOKEN_IF          shift, and go to state 192
    TOKEN_PRINT       shift, and go to state 145
    TOKEN_RETURN      shift, and go to state 146
    TOKEN_LEFT_BRACE  shift, and go to state 136
    TOKEN_SEMICOLON   shift, and go to state 200
    TOKEN_IDENTIFIER  shift, and go to state 2

    identifier     go to state 147
    var_decl       go to state 148
    if_dangle      go to state 201
    stmt           go to state 176
    simple_stmt    go to state 195
    compound_stmt  go to state 151
    dangle_end     go to state 202
    reg_end        go to state 177
    access         go to state 152
    array_access   go to state 43
    stmt_block     go to state 153
    array_decl     go to state 9
    return_stmt    go to state 155
    expr_assign    go to state 156
    inc_or_dec     go to state 157
    for_stmt       go to state 196
    func_call      go to state 159
    print_stmt     go to state 160


State 197

   72 for_cond: TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON . for_expr TOKEN_RIGHT_PARENTHESIS

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    $default  reduce using rule 74 (for_expr)

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 183
    for_expr         go to state 203
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 198

   13 if_dangle: TOKEN_IF TOKEN_LEFT_PARENTHESIS . expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE if_dangle
   26 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS . expr TOKEN_RIGHT_PARENTHESIS stmt
   27              | TOKEN_IF TOKEN_LEFT_PARENTHESIS . expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE stmt

    TOKEN_SUBTRACT          shift, and go to state 31
    TOKEN_FALSE             shift, and go to state 32
    TOKEN_TRUE              shift, and go to state 33
    TOKEN_ADD               shift, and go to state 34
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 35
    TOKEN_NOT               shift, and go to state 36
    TOKEN_IDENTIFIER        shift, and go to state 2
    TOKEN_INT_LITERAL       shift, and go to state 37
    TOKEN_FLOAT_LITERAL     shift, and go to state 38
    TOKEN_STRING_LITERAL    shift, and go to state 39
    TOKEN_CHAR_LITERAL      shift, and go to state 40

    identifier       go to state 41
    access           go to state 42
    array_access     go to state 43
    expr_assign      go to state 45
    inc_or_dec       go to state 46
    expr_val         go to state 47
    expr             go to state 204
    expr2            go to state 49
    expr3            go to state 50
    expr4            go to state 51
    expr5            go to state 52
    expr6            go to state 53
    expr7            go to state 54
    expr8            go to state 55
    expr9            go to state 56
    boolean_literal  go to state 57
    func_call        go to state 58
    data_atom        go to state 59


State 199

   27 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE . stmt

    TOKEN_FOR         shift, and go to state 143
    TOKEN_IF          shift, and go to state 144
    TOKEN_PRINT       shift, and go to state 145
    TOKEN_RETURN      shift, and go to state 146
    TOKEN_LEFT_BRACE  shift, and go to state 136
    TOKEN_IDENTIFIER  shift, and go to state 2

    identifier     go to state 147
    var_decl       go to state 148
    stmt           go to state 205
    simple_stmt    go to state 150
    compound_stmt  go to state 151
    access         go to state 152
    array_access   go to state 43
    stmt_block     go to state 153
    array_decl     go to state 9
    return_stmt    go to state 155
    expr_assign    go to state 156
    inc_or_dec     go to state 157
    for_stmt       go to state 158
    func_call      go to state 159
    print_stmt     go to state 160


State 200

   28 dangle_end: TOKEN_SEMICOLON .
   31 reg_end: TOKEN_SEMICOLON .

    TOKEN_ELSE  reduce using rule 28 (dangle_end)
    $default    reduce using rule 31 (reg_end)


State 201

   29 dangle_end: if_dangle .

    $default  reduce using rule 29 (dangle_end)


State 202

   14 if_dangle: for_stmt dangle_end .

    $default  reduce using rule 14 (if_dangle)


State 203

   72 for_cond: TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr . TOKEN_RIGHT_PARENTHESIS

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 206


State 204

   13 if_dangle: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr . TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE if_dangle
   26 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr . TOKEN_RIGHT_PARENTHESIS stmt
   27              | TOKEN_IF TOKEN_LEFT_PARENTHESIS expr . TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE stmt

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 207


State 205

   27 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE stmt .

    $default  reduce using rule 27 (compound_stmt)


State 206

   72 for_cond: TOKEN_LEFT_PARENTHESIS for_expr TOKEN_SEMICOLON for_expr TOKEN_SEMICOLON for_expr TOKEN_RIGHT_PARENTHESIS .

    $default  reduce using rule 72 (for_cond)


State 207

   13 if_dangle: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS . if_dangle TOKEN_ELSE if_dangle
   26 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS . stmt
   27              | TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS . if_dangle TOKEN_ELSE stmt

    TOKEN_FOR         shift, and go to state 143
    TOKEN_IF          shift, and go to state 192
    TOKEN_PRINT       shift, and go to state 145
    TOKEN_RETURN      shift, and go to state 146
    TOKEN_LEFT_BRACE  shift, and go to state 136
    TOKEN_IDENTIFIER  shift, and go to state 2

    identifier     go to state 147
    var_decl       go to state 148
    if_dangle      go to state 208
    stmt           go to state 194
    simple_stmt    go to state 195
    compound_stmt  go to state 151
    access         go to state 152
    array_access   go to state 43
    stmt_block     go to state 153
    array_decl     go to state 9
    return_stmt    go to state 155
    expr_assign    go to state 156
    inc_or_dec     go to state 157
    for_stmt       go to state 196
    func_call      go to state 159
    print_stmt     go to state 160


State 208

   13 if_dangle: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle . TOKEN_ELSE if_dangle
   27 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle . TOKEN_ELSE stmt

    TOKEN_ELSE  shift, and go to state 209


State 209

   13 if_dangle: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE . if_dangle
   27 compound_stmt: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE . stmt

    TOKEN_FOR         shift, and go to state 143
    TOKEN_IF          shift, and go to state 192
    TOKEN_PRINT       shift, and go to state 145
    TOKEN_RETURN      shift, and go to state 146
    TOKEN_LEFT_BRACE  shift, and go to state 136
    TOKEN_IDENTIFIER  shift, and go to state 2

    identifier     go to state 147
    var_decl       go to state 148
    if_dangle      go to state 210
    stmt           go to state 205
    simple_stmt    go to state 195
    compound_stmt  go to state 151
    access         go to state 152
    array_access   go to state 43
    stmt_block     go to state 153
    array_decl     go to state 9
    return_stmt    go to state 155
    expr_assign    go to state 156
    inc_or_dec     go to state 157
    for_stmt       go to state 196
    func_call      go to state 159
    print_stmt     go to state 160


State 210

   13 if_dangle: TOKEN_IF TOKEN_LEFT_PARENTHESIS expr TOKEN_RIGHT_PARENTHESIS if_dangle TOKEN_ELSE if_dangle .

    $default  reduce using rule 13 (if_dangle)
